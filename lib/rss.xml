<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Cap]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>Cap</title><link></link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Tue, 24 Dec 2024 16:39:14 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Tue, 24 Dec 2024 16:39:12 GMT</pubDate><ttl>60</ttl><dc:creator></dc:creator><item><title><![CDATA[Ответы]]></title><description><![CDATA[ 
 <br><br><br>
<br>Ленты (магнитные ленточные накопители): долговременное хранение данных.
<br>Внешние жесткие диски: используются для регулярного копирования.
<br>NAS (сетевые накопители): позволяют централизованно хранить данные в сети.
<br>Системы SAN: высокопроизводительные системы для крупных предприятий.
<br>Облачные серверы: внешние провайдеры, обеспечивающие хранение данных на удаленных серверах.
<br><br>
<br>Программы для создания образов системы (Acronis True Image, Clonezilla).
<br>Инструменты встроенные в ОС (Windows Backup, Time Machine).
<br>Корпоративные решения (Veeam Backup, Symantec Backup Exec).
<br>Облачные сервисы (Google Drive, Dropbox, OneDrive).
<br>Средства командной строки (rsync, tar для Linux).
<br><br><br>
<br>По типу хранения данных:

<br>Полное: создается полная копия данных.
<br>Инкрементное: сохраняются изменения с последнего резервного копирования.
<br>Дифференциальное: сохраняются изменения с момента последнего полного копирования.
<br>Смешанное инкрементное: то же, что инкрементное, но количество инкрементных копий задаётся пользователем, затем цикл повторяется.
<br>Смешанный дифференциальный: то же, что инкрементное, но количество дифференциальных копий задаётся пользователем, затем цикл повторяется.
<br>Зеркальное резервное копирование/Двухсторонняя синхронизация папок: Все новые или изменённые данные копируются из одной синхронизируемой папки в другую. При данном типе копирования происходит взаимное обновление содержимого папок.


<br>По назначению:

<br>Локальное резервное копирование.
<br>Облачное резервное копирование.


<br>По способу управления:

<br>Ручное.
<br>Автоматическое (по расписанию).


<br>По платформе:

<br>Кроссплатформенные (поддерживают несколько ОС).
<br>Привязанные к одной ОС.


<br><br><br>
<br>Acronis True Image: создает образы дисков, поддерживает инкрементные и полные копии.
<br>Veeam Backup: корпоративное решение для виртуальных и физических серверов.
<br>Windows Backup: стандартный инструмент для пользователей Windows.
<br>Time Machine: инструмент для пользователей macOS.
<br>Google Drive, Dropbox: облачные сервисы для резервного копирования пользовательских данных.
<br><br><br>ISO/IEC 12207 — это базовый стандарт процессов жизненного цикла программного обеспечения (ЖЦ ПО), предназначенный для различных видов программного обеспечения (ПО) и типов проектов автоматизированных систем (АС), в которые ПО входит как часть.  <br><br>Стандарт определяет стратегию и общий порядок создания и эксплуатации ПО. Он охватывает весь жизненный цикл программного обеспечения — от концептуализации идей до завершения ЖЦ. При этом процессы ЖЦ ПО должны быть совместимы с процессами ЖЦ АС, что подчёркивает целесообразность совместного использования стандартов для АС и ПО.<br><br>В стандарте описаны пять ключевых процессов ЖЦ ПО:<br>
<br>Процесс приобретения  
<br>Процесс поставки  
<br>Процесс разработки  
<br>Процесс функционирования  
<br>Процесс сопровождения
<br><br>Эти процессы поддерживают основные процессы, обеспечивая решение проблем, документирование, управление конфигурацией и гарантирование качества. Основные вспомогательные процессы:<br>
<br>Верификация  
<br>Аттестация  
<br>Совместная оценка  
<br>Аудит
<br><br>Эти процессы ориентированы на управление и улучшение инфраструктуры. Они включают:<br>
<br>Управление  
<br>Создание инфраструктуры  
<br>Усовершенствование  
<br>Обучение
<br>Также выделен процесс адаптации, направленный на настройку стандарта под конкретный проект, включая исключение неприменимых процессов и задач.<br><br>
<br>
Динамический характер  

<br>Один процесс может вызывать другой по мере необходимости, обеспечивая гибкость и логику связей между задачами.  
<br>Предопределённой последовательности выполнения процессов нет.


<br>
Максимальная адаптивность  

<br>Процессы и задачи легко адаптируются под нужды конкретных проектов. Процесс адаптации позволяет исключить неприменимые элементы.  


<br>
Отсутствие конкретных методов и шаблонов  

<br>Стандарт описывает архитектуру процессов ЖЦ ПО, но не конкретизирует их в деталях.  
<br>Решения о методах, форматах и содержимом документации принимаются пользователями стандарта.


<br>
Гарантирование качества  

<br>Выполняется с разной степенью организационной независимости проверяющих процессов.  
<br>Возможна полная независимость проверяющего персонала.


<br>
Ответственность организации  

<br>После принятия стандарта в качестве условия торговых отношений организация обязана указать минимальный набор процессов и задач, требуемых для соответствия стандарту.


<br>
Ограничения на проектирование БД  

<br>Стандарт практически не описывает аспекты проектирования баз данных, что оправдано ввиду различий в типах БД и их необходимости в разных проектах.


<br><br><br>План внедрения — это последовательность шагов или действий, необходимых для внесения изменений в целевую систему. Каждая операция в рамках плана может быть выполнена вручную или автоматически. План внедрения должен быть четко определён, утверждён и согласован до начала процесса.<br><br><br>
<br>Анализ текущей системы  

<br>Определение соответствия существующей системы новым требованиям.
<br>Разработка мер по устранению выявленных дефектов.


<br>Мотивация сотрудников  

<br>Решение проблемы мотивации менеджеров и специалистов, участвующих во внедрении.


<br>Системы управления и контроля  

<br>Разработка систем управления внедрением и стратегического контроля.


<br>Формирование кадрового состава  

<br>Подбор управленческого персонала, распределение ролей, создание рабочих групп и команд.


<br>Организационные изменения  

<br>Изменение организационной структуры для соответствия новой стратегии.


<br>Подготовка персонала  

<br>Обучение сотрудников, развитие навыков и применение новых систем мотивации.


<br>Планирование внедрения  

<br>Составление детального плана, формирование графиков, распределение функций и ответственности.


<br><br>
<br>Работа групп и команд  

<br>Проведение совещаний, установление прямых коммуникаций (включая телекоммуникации).


<br>Финансирование  

<br>Обеспечение ресурсов для внедрения, включая финансирование рабочих групп.


<br>Контроль результатов  

<br>Сравнение результатов внедрения с планом и показателями конкурентов.


<br>Анализ и корректировка  

<br>Анализ текущих результатов, выявление отклонений, принятие решений о продолжении, корректировке или прекращении.


<br>Распространение стратегии  

<br>Разработка и внедрение стратегических установок, их коммуникация по компании.


<br><br>
<br>Опытные (пробные) внедрения  

<br>Цель: апробация и демонстрация технологии.  
<br>Разработчики играют активную роль, организация выступает в роли наблюдателя.


<br>Масштабные внедрения  

<br>Цель: проверка масштабируемости технологии для крупных проектов.  
<br>Основную роль выполняет персонал организации, вписывающий новую технологию в свои процессы.


<br>Конвейерные внедрения  

<br>Цель: стандартизированное внедрение через специализированные процессы.  
<br>Выполняется силами сторонних организаций, без активного участия разработчиков.  
<br>Такие внедрения обеспечивают возможность массового применения технологии и выхода на широкий рынок.


<br><br>
<br>Опытные внедрения позволяют оценить работоспособность технологии.  
<br>Масштабные внедрения проверяют её применимость в реальных условиях.  
<br>Конвейерные внедрения делают технологию доступной для массового использования без активного участия разработчиков.  
<br>Конвейерный подход обеспечивает отчуждение технологии от её создателей, что необходимо для коммерциализации и экономической эффективности разработки.<br><br>Стратегии:<br>
- Модульная: пошаговое внедрение отдельных модулей системы.<br>
- Параллельная: тестирование новой системы при функционирующей старой.<br>
- Полное: единовременный переход на новую систему.<br>
Цели:<br>
- Увеличение эффективности.<br>
- Минимизация сбоев.<br>
Сценарии:<br>
- Плановый: поэтапное внедрение.<br>
- Аварийный: ускоренное внедрение при отказе текущей системы.<br><br><br>Менеджер сопровождения:<br>
- Обеспечение работы системы.<br>
- Устранение ошибок.<br>
- Поддержка пользователей.<br>
Менеджер развертывания:<br>
- Планирование развертывания.<br>
- Контроль тестирования.<br>
- Обучение персонала.<br><br><br>
<br>Управление проектами.
<br>Интеграция данных.
<br>Управление конфигурациями.
<br>Автоматическое тестирование.
<br>Генерация отчетности.
<br><br><br>
<br>Производительность: скорость выполнения задач.
<br>Надежность: время безотказной работы.
<br>Удобство: удовлетворенность пользователей.
<br>Безопасность: защита данных.
<br>Масштабируемость: возможность расширения системы.
<br><br><br><br>CALS-технологии (Continuous Acquisition and Life Cycle Support) — это информационные технологии, обеспечивающие управление процессами жизненного цикла изделия (ЖЦИ) или системы. Они особенно актуальны для сложной, высокотехнологичной и наукоёмкой продукции, в том числе машиностроения и других инженерных отраслей.<br>CALS-технологии реализуют концепцию непрерывной информационной поддержки на всех этапах ЖЦИ — от проектирования до утилизации, обеспечивая интеграцию данных, прозрачность процессов и высокую эффективность взаимодействия.<br><br>
<br>
Технологии анализа и реинжиниринга бизнес-процессов  

<br>Цель: реструктуризация функционирования предприятия.  
<br>Позволяют перейти от бумажного к электронному документообороту, внедрять современные методы разработки изделий (например, параллельное проектирование, междисциплинарные рабочие группы).  


<br>
Технологии представления данных об изделии  

<br>Обеспечивают стандартизированное электронное представление данных, относящихся к разным процессам ЖЦИ.  
<br>Являются первым этапом создания информационного пространства.


<br>
Технологии интеграции данных об изделии  

<br>Интегрируют автоматизированные процессы ЖЦИ и соответствующие данные, объединяя их в рамках единой информационной модели.  
<br>Представляют собой второй этап формирования информационного пространства (ИП).


<br><br>Для интеграции всех данных используются системы управления данными об изделии (Product Data Management, PDM).  <br><br>
<br>Аккумулирование информации, создаваемой прикладными системами, в единую модель.  
<br>Организация взаимодействия между системами на основе стандартных интерфейсов.
<br><br>
<br>Функциональные стандарты  

<br>Определяют организационные процедуры взаимодействия компьютерных систем.  
<br>Пример: стандарт IDEF (в частности, IDEF0 для моделирования функций).


<br>Информационные стандарты  

<br>Определяют модели данных, применимые всеми участниками ЖЦИ.  
<br>Пример: ISO 10303 (STEP).


<br>Стандарты программной архитектуры  

<br>Описывают архитектуру программных систем для автоматизации взаимодействия.  
<br>Пример: COBRA.


<br>Коммуникационные стандарты  

<br>Регламентируют способы физической передачи данных по сетям.  
<br>Пример: Интернет-стандарты.


<br><br>
<br>Независимость от предметной области  

<br>Применима для создания сложной наукоёмкой продукции (военной и гражданской).  


<br>Поддержка длительного жизненного цикла  

<br>CALS-технологии рассчитаны на продукцию с жизненным циклом в десятки лет, включая модернизации.


<br>Прозрачность взаимодействия  

<br>Способствуют лёгким и прозрачным коммуникациям между подрядчиками, исполнителями и заказчиками.  


<br><br>
<br>Полная интеграция данных на всех этапах ЖЦИ.  
<br>Уменьшение временных и финансовых затрат за счёт автоматизации.  
<br>Повышение качества продукции через стандартизацию процессов.  
<br>Поддержка взаимодействия между многочисленными участниками проекта.  
<br>Таким образом, CALS-технологии обеспечивают эффективное управление сложными проектами и способствуют развитию современных подходов к проектированию, производству и эксплуатации продукции.<br><br><br>Обновление — процесс замены продукта более новой версией того же продукта.<br>
Типы обновлений:<br>
- Полное: замена всей системы.<br>
- Частичное: обновление отдельных модулей или компонентов.<br>
- Промежуточное: тестирование новых компонентов перед внедрением.<br>
- Квартальное: регулярное обновление на основе заранее определённого графика.<br>Этапы обновления:<br>
1. Обследование: анализ текущей системы и сбор данных.<br>
2. Подготовка плана: создание тестовой базы, проверка функционала.<br>
3. Реализация: установка обновлений, тестирование, корректировки.<br>
4. Поддержка: решение оставшихся проблем.<br><br><br>Цели тестирования:<br>
- Обнаружение ошибок и их устранение.<br>
- Проверка соответствия требованиям.<br>
- Обеспечение стабильной работы продукта.<br>Виды тестирования:<br>
1. Модульное: проверка отдельных частей программы.<br>
2. Интеграционное: тестирование взаимодействия между компонентами.<br>
3. Приемочное: проверка соответствия бизнес-требованиям.<br>
4. Дымовое: проверка базовой функциональности системы.<br>
5. Нагрузочное: проверка производительности под высокой нагрузкой.<br>
6. Бета-тестирование: проверка продукта конечными пользователями перед выпуском.<br><br><br>Эксплуатационная документация — это совокупность документов, необходимых для обеспечения правильной эксплуатации системы.<br>
Основные виды документации:<br>
- Руководство пользователя.<br>
- Руководство администратора.<br>
- Описание архитектуры системы.<br>
- Регламенты обновлений и обслуживания.<br>
Цели документации:<br>
- Обучение пользователей.<br>
- Снижение рисков ошибок эксплуатации.<br>
- Ускорение процесса устранения неисправностей.<br><br><br>Совместимость программного обеспечения — это способность различных программных компонентов или систем корректно работать вместе на одной или нескольких платформах.<br><br>
<br>Аппаратная совместимость:

<br>Способность одного устройства заменять другое того же типа.
<br>Возможность физического или логического сопряжения устройств (например, совместимость разъемов).


<br>Программная совместимость:

<br>Возможность выполнения одинаковых программ с идентичными результатами на разных платформах.
<br>Двоичная совместимость: работа с файлами или кодом, созданным на другой системе.


<br>Информационная совместимость:

<br>Адекватное восприятие одинаково представленных данных разными системами.


<br><br>
<br>Устаревшее оборудование.
<br>Несовершенство ОС.
<br>Конфликты между драйверами.
<br><br><br><br>
<br>Обновления ОС:

<br>Устаревшие драйверы не поддерживаются новыми версиями.


<br>Конфликты оборудования:

<br>Несовместимость новых драйверов с более старым оборудованием.


<br>Ошибка драйвера:

<br>Неправильно написанный или протестированный драйвер.


<br>Различные архитектуры:

<br>Несовместимость между 32-битными и 64-битными системами.


<br><br>
<br>Регулярное обновление драйверов.
<br>Использование средств восстановления ОС.
<br>Тестирование драйверов перед внедрением.
<br><br><br>Чистая загрузка — это запуск операционной системы с минимальным набором драйверов и программ, необходимых для её работы. Используется для устранения конфликтов и проблем, вызванных сторонним программным обеспечением или драйверами.<br><br>
<br>Открытие конфигурации системы:

<br>Команда msconfig в Windows.


<br>Отключение всех сторонних служб:

<br>На вкладке "Службы" оставить только службы Microsoft.


<br>Отключение автозагрузки:

<br>На вкладке "Автозагрузка" отключить все программы.


<br>Перезагрузка системы.
<br>Цели чистой загрузки:<br>
<br>Выявление программ, вызывающих сбои.
<br>Диагностика проблем с драйверами.
<br><br><br><br>
<br>Совместимость:

<br>Новая версия может не поддерживать старое оборудование или ПО.


<br>Обучение сотрудников:

<br>Требуется время для освоения новых функций.


<br>Стабильность:

<br>Возможны ошибки в новой версии.


<br>Затраты:

<br>Переход может потребовать обновления оборудования или других программ.


<br><br>
<br>Проведение тестирования перед обновлением.
<br>Обучение пользователей.
<br>Создание резервных копий текущей версии.
<br><br><br>Методы анализа:<br>
<br>Тестирование установки:

<br>Проверка работы приложения на новых системах.


<br>Конфигурационное тестирование:

<br>Оценка совместимости с различными конфигурациями оборудования.


<br>Мониторинг ошибок:

<br>Использование журналов и системных утилит для отслеживания сбоев.


<br>Инструменты:<br>
<br>Программы совместимости Windows (Compatibility Troubleshooter).
<br>Средства виртуализации (например, Hyper-V) для запуска старых приложений.
<br><br><br>Динамически загружаемые библиотеки (DLL) — это файлы, содержащие код и данные, которые могут использоваться одновременно несколькими программами.<br><br>
<br>Экономия памяти: Общий код загружается в память один раз.
<br>Модульность: Легко обновлять отдельные компоненты.
<br>Повторное использование кода: Один файл DLL может использоваться несколькими программами.
<br><br>
<br>"DLL Hell" (ад DLL): Конфликты версий DLL.
<br>Зависимости: Программа не работает без нужной версии DLL.
<br><br><br>Виртуальная машина (VM) — это программная среда, имитирующая работу физического компьютера.<br><br>
<br>Установка ПО виртуализации (например, VirtualBox, VMware).
<br>Создание новой виртуальной машины.
<br>Настройка параметров (оперативная память, процессор, дисковое пространство).
<br>Установка ОС на виртуальную машину.
<br>Цели использования VM:<br>
<br>Тестирование программного обеспечения.
<br>Обеспечение безопасности.
<br>Поддержка устаревших приложений.
<br><br><br>Настройки по умолчанию в образе системы позволяют оптимизировать её для конкретных задач или пользователей.<br><br>
<br>Настройка параметров безопасности.
<br>Оптимизация автозагрузки.
<br>Настройка сетевых параметров.
<br>Удаление ненужных приложений.
<br><br>
<br>Открытие образа системы в редакторе (например, DISM).
<br>Внесение изменений в файлы конфигурации.
<br>Сохранение изменений и генерация нового образа.
<br><br><br>Сетевой ресурс — это устройство или часть данных, доступная через локальную сеть или интернет.<br><br>
<br>Проверка сетевого подключения.
<br>Использование команды \\имя_ресурса или IP-адреса в проводнике Windows.
<br>Ввод учётных данных, если требуется.
<br>Подключение диска (например, через "Подключить сетевой диск").
<br><br><br>Настройка обновлений программ:<br>
<br>Использование встроенных инструментов автообновления.
<br>Установка настроек проверки обновлений (автоматическая, ручная).<br>
Обновление драйверов:
<br>Использование дисков производителей.
<br>Загрузка с официальных сайтов.
<br>Применение встроенных утилит ОС (например, Windows Update).
<br><br><br>Групповые политики (GPO) позволяют централизованно управлять настройками в домене Active Directory.<br><br>
<br>Настройка прав доступа.
<br>Обновление программного обеспечения.
<br>Установка политик безопасности.
<br><br><br>Основные причины снижения производительности:<br>
<br>Недостаток оперативной памяти.
<br>Устаревший процессор.
<br>Фрагментация диска.
<br>Фоновые программы.
<br>Методы оптимизации:<br>
<br>Очистка автозагрузки.
<br>Установка SSD вместо HDD.
<br>Обновление драйверов и ОС.
<br>Увеличение оперативной памяти.
<br><br><br>Настройка управления питанием:<br>
<br>Использование предустановленных схем энергопотребления:

<br>"Экономия энергии" для минимального потребления.
<br>"Высокая производительность" для максимальной мощности.
<br>"Сбалансированный" режим для оптимального соотношения.


<br>Настройка перехода в спящий режим и отключения дисплея.
<br>Использование дополнительных настроек BIOS/UEFI для управления питанием процессора.
<br>Оптимизация использования процессора:<br>
<br>Отключение фоновых задач, потребляющих ресурсы.
<br>Настройка приоритетов задач через "Диспетчер задач".
<br>Обновление драйверов для чипсета и процессора.
<br>Использование программного обеспечения для мониторинга (например, CPU-Z, HWMonitor).
<br><br><br>Методы оптимизации оперативной памяти:<br>
<br>Увеличение объёма оперативной памяти (установка дополнительных модулей).
<br>Настройка файла подкачки (виртуальной памяти) для предотвращения нехватки ресурсов.
<br>Отключение ненужных служб и программ из автозагрузки.
<br>Использование программ для очистки памяти (например, CCleaner).
<br>Установка 64-битной версии ОС для поддержки большего объёма оперативной памяти.
<br><br><br>Средства диагностики оборудования:<br>
<br>Встроенные утилиты ОС:

<br>"Средство проверки памяти Windows".
<br>"Диспетчер устройств" для диагностики проблем драйверов.


<br>Специализированное ПО:

<br>AIDA64: мониторинг и диагностика аппаратных компонентов.
<br>MemTest86: проверка оперативной памяти.
<br>CrystalDiskInfo: диагностика жёстких дисков и SSD.


<br>Шаги для разрешения аппаратных проблем:<br>
<br>Проверка подключений и питания компонентов.
<br>Обновление драйверов и прошивки BIOS/UEFI.
<br>Замена неисправных компонентов.
<br>Использование тестового оборудования для проверки совместимости.
<br><br><br>Основные виды серверного ПО:<br>
<br>Клиент-сервер:

<br>Примеры серверов: базы данных (MySQL, PostgreSQL), веб-серверы (Apache, Nginx), файловые серверы.
<br>Предназначение: распределение задач между клиентом (пользовательским устройством или приложением) и сервером (централизованной системой обработки данных).


<br>Веб-серверы:

<br>Примеры: Apache, Nginx, Microsoft IIS.
<br>Предназначение: обработка HTTP-запросов и предоставление веб-ресурсов.


<br>Серверы баз данных:

<br>Примеры: MySQL, PostgreSQL, Microsoft SQL Server.
<br>Предназначение: управление и хранение данных для приложений.


<br>Почтовые серверы:

<br>Примеры: Microsoft Exchange, Postfix.
<br>Предназначение: отправка, получение и хранение электронной почты.


<br>Файловые серверы:

<br>Предназначение: централизованное хранение и управление файлами.


<br>Серверы виртуализации:

<br>Примеры: VMware ESXi, Microsoft Hyper-V.
<br>Предназначение: создание и управление виртуальными машинами.


<br><br><br>Основные виды клиентского ПО:<br>
<br>Веб-браузеры:

<br>Примеры: Google Chrome, Mozilla Firefox, Microsoft Edge.
<br>Предназначение: доступ к веб-ресурсам.


<br>Почтовые клиенты:

<br>Примеры: Microsoft Outlook, Thunderbird.
<br>Предназначение: управление электронной почтой.


<br>Мессенджеры:

<br>Примеры: Telegram, WhatsApp, Microsoft Teams.
<br>Предназначение: обмен текстовыми сообщениями, звонки.


<br>Клиенты удалённого доступа:

<br>Примеры: TeamViewer, AnyDesk.
<br>Предназначение: управление удалёнными устройствами.


<br>Облачные клиенты:

<br>Примеры: Google Drive, Dropbox.
<br>Предназначение: доступ и управление файлами в облаке.


<br><br><br>Многоуровневая модель качества программного обеспечения включает несколько аспектов, которые оценивают качество ПО с различных точек зрения.<br>
<br>Функциональное качество:

<br>Оценивается соответствие требованиям пользователя.
<br>Включает тестирование функциональности, надёжности, безопасности.


<br>Процессное качество:

<br>Анализируется эффективность разработки.
<br>Учитывает затраты на разработку, сроки выполнения, использование стандартов (например, ГОСТ).


<br>Структурное качество:

<br>Анализируется архитектура и код системы.
<br>Учитывается простота сопровождения, модульность, читаемость кода.


<br><br><br>Объекты уязвимости программного обеспечения — это компоненты системы, которые могут быть подвергнуты атакам или сбоям:<br>
<br>Код приложения:

<br>Ошибки программирования (например, SQL-инъекции, переполнение буфера).


<br>Сетевые интерфейсы:

<br>Открытые порты, слабая аутентификация.


<br>Файловая система:

<br>Несанкционированный доступ к файлам или данным.


<br>Модули безопасности:

<br>Устаревшие или ненадёжные алгоритмы шифрования.


<br><br><br>Основные дестабилизирующие факторы:<br>
<br>Аппаратные:

<br>Сбой оборудования (жесткие диски, оперативная память).


<br>Программные:

<br>Ошибки кода, несовместимости драйверов.


<br>Человеческий фактор:

<br>Ошибки пользователей или администраторов.


<br>Угрозы надёжности:<br>
<br>Утечка данных.
<br>Потеря работоспособности системы.
<br>Снижение производительности.
<br><br><br>
<br>Резервное копирование данных:

<br>Регулярное создание копий данных.


<br>Тестирование:

<br>Проводить нагрузочные, модульные и интеграционные тесты.


<br>Мониторинг:

<br>Использовать системы мониторинга (например, Zabbix, Nagios).


<br>Обновление компонентов:

<br>Обновлять драйверы, ОС и программное обеспечение.


<br><br><br>1. Временная избыточность:<br>
<br>Повторное выполнение операции для повышения вероятности успеха.<br>
2. Информационная избыточность:
<br>Использование контрольных сумм, паритетов и других механизмов для проверки целостности данных.<br>
3. Программная избыточность:
<br>Использование резервных алгоритмов или функций для устранения сбоев.
<br><br><br>Первичные ошибки — это ошибки, возникшие на этапе проектирования или разработки ПО:<br>
<br>Логические ошибки:

<br>Пример: неверные алгоритмы.


<br>Синтаксические ошибки:

<br>Пример: неправильное использование синтаксиса языка программирования.


<br>Проявления:<br>
<br>Неправильные результаты работы системы.
<br>Прерывание выполнения программы.
<br><br><br>Вторичные ошибки — это ошибки, вызванные первичными, проявляющиеся на этапе эксплуатации ПО:<br>
<br>Ошибки интеграции:

<br>Пример: сбои при взаимодействии модулей.


<br>Ошибки совместимости:

<br>Пример: проблемы при обновлении программного обеспечения.


<br>Проявления:<br>
<br>Снижение производительности.
<br>Конфликты между компонентами системы.
<br><br><br>Для описания ошибок используются:<br>
<br>Модели Пуассона:

<br>Прогнозируют частоту возникновения ошибок.


<br>Модели надёжности:

<br>Оценивают вероятность безотказной работы.


<br>Регрессионные модели:

<br>Оценивают зависимости между факторами, влияющими на частоту ошибок.


<br><br><br>Анализ рисков включает:<br>
<br>Оценку вероятности возникновения проблем.
<br>Выявление критических точек (например, безопасность, производительность).
<br>Разработку планов по минимизации рисков.
<br>Характеристики качества:<br>
<br>Надёжность.
<br>Удобство использования.
<br>Производительность.
<br>Масштабируемость.
<br><br><br>Модули адаптации обеспечивают интеграцию нового ПО с существующей системой. Они целесообразны в случаях:<br>
<br>Сложных интеграций:

<br>Разные платформы или стандарты данных.


<br>Обеспечения обратной совместимости:

<br>Для работы с устаревшими компонентами.


<br>Преимущества:<br>
<br>Ускорение внедрения.
<br>Минимизация ошибок интеграции.
<br><br><br>Вредоносные программы (вирусы) — это программы, созданные с целью причинения вреда компьютерным системам или нарушения их работы. Их классификация осуществляется по нескольким критериям:<br><br>
<br>Компьютерные вирусы: заражают исполняемые файлы, системные области дисков.
<br>Черви: распространяются через сети, копируя себя на другие устройства.
<br>Троянские программы: маскируются под полезные приложения, но выполняют вредоносные действия.
<br>Шпионские программы (Spyware): собирают конфиденциальные данные пользователя.
<br>Руткиты: скрывают вредоносные действия, обеспечивая себе незаметность.
<br>Adware: показывают нежелательную рекламу.
<br>Программы-вымогатели (Ransomware): блокируют доступ к системе или файлам, требуя выкуп.
<br>Бэкдоры (Backdoors): предоставляют удалённый доступ к системе злоумышленникам.
<br><br>
<br>Файловые вирусы: заражают исполняемые файлы.
<br>Загрузочные вирусы: поражают загрузочные сектора дисков.
<br>Макровирусы: воздействуют на файлы документов и таблиц, используя встроенные макросы.
<br>Сетевые вирусы: распространяются через сети и интернет.
<br><br>
<br>Локальные вирусы: воздействуют на отдельный компьютер.
<br>Сетевые вирусы: поражают устройства, подключённые к одной сети.
<br><br>
<br>Windows-вирусы: написаны для ОС Windows.
<br>Linux-вирусы: работают в системах Linux.
<br>Мультиплатформенные вирусы: работают на разных ОС.
<br><br>
<br>Безвредные: не наносят прямого ущерба, но потребляют ресурсы.
<br>Опасные: нарушают работу программ, удаляют данные.
<br>Чрезвычайно опасные: могут вызвать повреждение аппаратного обеспечения.
<br><br><br>Обнаружение вредоносных программ является важной частью обеспечения информационной безопасности. Методы обнаружения можно классифицировать следующим образом:<br><br>
<br>Сравнение кода программы с известными сигнатурами вредоносного ПО, хранящимися в базе данных антивируса.
<br>Основное преимущество — высокая точность при обнаружении известных угроз.
<br>Недостаток — неспособность выявить новые (неизвестные) вредоносные программы.
<br><br>
<br>Мониторинг активности программ в реальном времени.
<br>Фиксация подозрительных действий, таких как попытки изменения системных файлов, внедрение в процессы, несанкционированный сетевой трафик и др.
<br>Преимущество — возможность обнаружения новых угроз.
<br>Недостаток — возможны ложные срабатывания.
<br><br>
<br>Использование алгоритмов для выявления кода, схожего с известным вредоносным ПО.
<br>Основан на анализе структуры и логики программы.
<br>Преимущество — выявление ранее неизвестных угроз.
<br>Недостаток — вероятность ложных положительных результатов.
<br><br>
<br>Проверка исполняемых файлов, библиотек, архивов и других элементов на наличие вредоносного кода.
<br>Интеграция с файловыми менеджерами и системами хранения данных.
<br><br>
<br>Проверка подозрительных объектов с использованием удалённых серверов, где выполняется детальный анализ.
<br>Преимущество — быстрый доступ к обновлённым базам данных и мощным инструментам анализа.
<br><br>
<br>Запуск подозрительных программ в изолированной среде для анализа их поведения.
<br>Преимущество — безопасное тестирование подозрительных объектов.
<br>Недостаток — высокий уровень потребления ресурсов.
<br><br>
<br>Анализ сетевых пакетов для обнаружения подозрительных соединений или передач данных.
<br>Используется в системах предотвращения вторжений (IDS/IPS).
<br><br>
<br>Выявление аномалий в системных логах, таких как повторяющиеся ошибки, странные запросы или неизвестные процессы.
<br><br>
<br>Использование моделей машинного обучения для классификации программ как вредоносных или безопасных.
<br>Преимущество — возможность адаптации к новым угрозам.
<br>Недостаток — необходимость в больших наборах данных для обучения моделей.
<br><br>Антивирусные программы предназначены для обнаружения, предотвращения и удаления вредоносного ПО. Их классификация может быть выполнена по следующим признакам:<br><br>
<br>Реактивные антивирусы: обнаруживают уже существующее вредоносное ПО на устройстве.
<br>Проактивные антивирусы: предотвращают проникновение вредоносного ПО на устройство, анализируя поведение программ.
<br><br>
<br>Сканеры: проверяют файлы на наличие вирусов по базе сигнатур.
<br>Мониторы: работают в реальном времени, отслеживая активность процессов.
<br>Фильтры: блокируют подозрительные действия программ или пользователей.
<br>Ревизоры: фиксируют изменения в системных файлах и конфигурациях.
<br><br>
<br>Для домашних пользователей: обеспечивают базовую защиту от вредоносного ПО.
<br>Для корпоративных пользователей: содержат дополнительные инструменты управления и мониторинга для сетей.
<br>Для серверов: ориентированы на защиту серверного оборудования и данных.
<br><br>
<br>Локальные антивирусы: устанавливаются на устройство пользователя.
<br>Облачные антивирусы: работают с использованием удалённых серверов для анализа.
<br><br><br>Файрвол (межсетевой экран) — это средство защиты, которое контролирует и фильтрует сетевой трафик.<br><br>
<br>Контроль доступа: блокировка несанкционированных соединений.
<br>Фильтрация трафика: анализ пакетов данных на соответствие заданным правилам.
<br>Защита от атак: предотвращение DoS-атак, SQL-инъекций и других угроз.
<br>Логирование событий: ведение журналов о сетевой активности.
<br><br>
<br>Определение правил фильтрации: разрешение или блокировка входящего и исходящего трафика.
<br>Настройка зон безопасности: создание разных уровней доверия для сетей (локальная, внешняя).
<br>Мониторинг трафика: регулярный анализ журнала событий.
<br>Обновление программного обеспечения: своевременное обновление для устранения уязвимостей.
<br><br><br><br>
<br>Описание: инструмент централизованного управления настройками на устройствах, подключённых к домену Active Directory.
<br>Задачи:

<br>Настройка параметров безопасности.
<br>Управление доступом пользователей к приложениям.
<br>Автоматизация обновлений и установки ПО.


<br><br>
<br>Определение: процесс подтверждения личности пользователя перед предоставлением доступа.
<br>Методы:

<br>Пароли.
<br>Двухфакторная аутентификация (2FA).
<br>Биометрия.


<br><br>
<br>Локальные: применяются на конкретном устройстве.
<br>Доменные: используются в сетях с централизованным управлением.
<br>Привилегированные: обладают повышенными правами для выполнения административных задач.
<br><br><br><br>
<br>Выявление уязвимостей в коде.
<br>Проверка устойчивости к различным типам атак.
<br>Оценка соответствия стандартам безопасности.
<br><br>
<br>Анализ кода: статический и динамический анализ.
<br>Тестирование на проникновение (Penetration Testing): моделирование атак злоумышленников.
<br>Фаззинг: ввод случайных данных для проверки поведения системы.
<br>Стресс-тестирование: проверка системы под высокой нагрузкой.
<br><br><br><br>
<br>Программные: реализованы на уровне ПО (например, VeraCrypt, PGP).
<br>Аппаратные: отдельные устройства для шифрования (например, HSM).
<br><br>
<br>Симметричное шифрование: используется один ключ для шифрования и расшифровки (AES, DES).
<br>Асимметричное шифрование: используются два ключа — открытый и закрытый (RSA, ECC).
<br><br>
<br>Защита электронной почты.
<br>Шифрование файлов.
<br>Обеспечение конфиденциальности в мессенджерах (например, Signal).
<br><br><br><br>
<br>TLS (Transport Layer Security)

<br>Обеспечивает безопасное соединение в интернете.
<br>Используется для защиты HTTP (HTTPS).


<br>IPSec (Internet Protocol Security)

<br>Защищает данные на сетевом уровне.
<br>Применяется для VPN.


<br>PGP (Pretty Good Privacy)

<br>Обеспечивает шифрование электронной почты и файлов.


<br>S/MIME (Secure/Multipurpose Internet Mail Extensions)

<br>Защищает электронную почту с использованием цифровых подписей и шифрования.


<br><br>
<br>Конфиденциальность.
<br>Аутентификация отправителя.
<br>Целостность данных.
]]></description><link>ответы-к-экзаменам\мдк-04\ответы.html</link><guid isPermaLink="false">Ответы к экзаменам/МДК 04/Ответы.md</guid><pubDate>Tue, 24 Dec 2024 16:36:16 GMT</pubDate></item></channel></rss>